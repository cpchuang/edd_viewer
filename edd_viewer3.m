function edd_viewer3(varargin)
% edd_viwer GUI to read & visdualize 6BM data.
%   
%   + 1.5.3 2020/08/06
%           - support visualization of 10-element detector
%   + 1.5.2 2020/01/16
%           - temporarily support 10-element detector data (only 2 elements)
%   + 1.5.1 2019/10/23
%           - energy calibration can select individual steps
%   + 1.5   2018/11/27
%           - support higher order energy calibration
%           - change GUI
%   + 1.4   2018/08/08
%           - add function to fit TOA
%   + 1.32  2018/02/07
%           - add option to show motor position
%           - switch 1-D plot yscale
%   + 1.31  2018/01/30
%           - use readedd5_6bm
%   + 1.3   2017/11/06
%           - add detector calibration GUI
%   + 1.22  2017/11/03
%           - use readedd3_6bm
%   + 1.21  2017/09/18
%           - bug fix, num2str now have 10 significant digit.
%   + 1.2   2017/07/18
%           - save/load detector parameters
%   + 1.1   2017/05/22
%           - add different unit (Energy/d-spacing)
%   + 1.0   2017/03/20
%           - initial version
% 
% Copyright 2017-2020 Andrew Chuang (chuang.cp@gmail.com)
% $Revision: 1.5.3 $  $Date: 2020/08/06 $



heddviewMain = findall(0,'Tag','eddviewmain_Fig');
if isempty(heddviewMain)
    % --------------------------------
    % --- Layout parameters
    % --------------------------------
    config.figSize = [590 500];   % [590 500];
    config.figPos  = [50 100 config.figSize];
    config.size.edbox1 = [120 30];  % size of text box
    config.size.edbox2 = [125 30];
    config.size.edbox3 = [ 60 30];
    config.size.edbox4 = [ 85 30];
    config.fs.edbox = 13 ;
    config.fs.text1 = 11 ;
    config.fs.text2 = 11 ;
    config.fs.text3 = 15 ;
    config.color.mainbg = [1 1 0.85];
    config.color.textbg = [0.8 1 0.8];
    % --------------------------------
    % --- Folder/File path(s)
    % --------------------------------
    config.folder   = '';  % working directory
    config.file     = '';  % 
        
    % ------------------------------------------------------------------%%%
    % --- Visualization options
    % ------------------------------------------------------------------%%%
    config.visopt             = '';       
    config.visopt.x_unit      = 'ch';
    config.visopt.datalim     = {[0 8192],'auto','auto'};
    config.visopt.yscale      = 0;  % 0: 'log' 1: 'linear'

    
    % ------------------------------------------------------------------%%%
    % --- Detector parameters
    % ------------------------------------------------------------------%%%
    %config.visopt.Inst(1).TOA     = 5;           % take-off angel for det-1
    %config.visopt.Inst(2).TOA     = 5;           % take-off angel for det-2
    %config.visopt.Inst(1).Ch2E    = [0.03 0];    % Channel-to-Energy parameters
    %config.visopt.Inst(2).Ch2E    = [0.03 0];    % Channel-to-Energy parameters
    %
    % TOA: take-off-angle, P(n): Energy = p2 * (Channel)^2 + p1 * channel + p0
    %
    config.visopt.Inst.detpar  = repmat([5 0 0.03 0],10,1);  % [TOA p0 p1 p2], 

    %%% ----------------------------------------------------------------%%%
    initFigure(config);
else
    figure(heddviewMain);
end

%================================================================
% --- initialize main figure layout
%================================================================
function initFigure(varargin)

config = varargin{1};

% --------------------------------
% --- main figure handle
% --------------------------------
figSize = config.figSize;
figPos  = config.figPos;
heddviewMain = figure(...
    'BackingStore','on',...
    'Units','pixels',...
    'DockControls','off',...
    'Resize','off',...
    'PaperOrient','portrait',...
    'PaperPositionMode','auto',...
    'IntegerHandle','off',...
    'NumberTitle','off',...
    'MenuBar','none',...
    'Toolbar','none',...
    'Name','EDD Viewer GUI',...
    'Position',figPos,...
    'HandleVisibility','callback',...
    'Tag','eddviewmain_Fig',...
    'CloseRequestFcn',@eddviewmain_CloseRequestFcn,...
    'UserData',[]);
hAxes = axes(...
    'Parent',heddviewMain,...
    'Units','pixels',...
    'Position',[0 0 figSize],...
    'Xlim',[0 figSize(1)],...
    'Ylim',[0 figSize(2)],...
    'Tag','eddviewmain_Axes');
hPatchMain = patch(...
    'Parent',hAxes,...
    'XData',[0 figSize(1) figSize(1) 0],...
    'YData',[0 0 figSize(2) figSize(2)],...
    'FaceColor',config.color.mainbg,...
    'EdgeColor',config.color.mainbg);

hGroupPatch = hggroup('Parent',hAxes);
set(get(hGroupPatch,'Children'),...
    'FaceColor',[1 1 1],...
    'EdgeColor',[1 1 0.7]);

hcopyright = text('Parent',hAxes,...
    'units','pixels',...
    'Position',[figSize(1)-10 20],...
    'fontsize',8,...
    'String',{'by AC@APS, ANL','Ver.1.5.3 August. 2020'},...
    'HorizontalAlignment','right',...
    'VerticalAlignment','mid',...
    'Tag','eddviewmain_copyright');

% --- Help menu handles ---
hMenuHelp = uimenu(heddviewMain,...
    'Label','&Help',...
    'HandleVisibility','callback',...
    'Tag','eddviewmain_MenuHelp');

hMenuHelpManual = uimenu(hMenuHelp,...
    'Label','&EDD Viewer Manual',...
    'HandleVisibility','callback',...
    'Tag','eddviewmain_MenuHelpManual',...
    'callback',@eddviewmain_MenuHelpCallbackFcn);

hMenuHelpDetConfig = uimenu(hMenuHelp,...
    'Label','&EDD Detector Configuration',...
    'HandleVisibility','callback',...
    'Tag','eddviewmain_MenuHelpDetConfig',...
    'callback',@eddviewmain_MenuHelpCallbackFcn);

% ---------------------------
% --- Main Push Buttons   ---
% ---------------------------
hpush(1) = uicontrol('Style','pushbutton',...
    'Parent',heddviewMain,...
    'units','pixels',...
    'Position',[113 40 88 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1-2,...
    'String','Load Config',...
    'HorizontalAlignment','center',...
    'callback',@main_load_Callback,...
    'Enable','on',...
    'Tag','main_push_load');

hpush(2) = uicontrol('Style','pushbutton',...
    'Parent',heddviewMain,...
    'units','pixels',...
    'Position',[207 40 88 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1-2,...
    'String','Save Config',...
    'HorizontalAlignment','center',...
    'callback',@main_save_Callback,...
    'Enable','on',...
    'Tag','main_push_save');

hpush(3) = uicontrol('Style','pushbutton',...
    'Parent',heddviewMain,...
    'units','pixels',...
    'Position',[19 40 88 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1-2,...
    'String','Calibrate',...
    'HorizontalAlignment','center',...
    'callback',@main_calibrate_Callback,...
    'Enable','on',...
    'Tag','main_push_calibrate');

hplot(1) = uicontrol('Style','pushbutton',...
    'Parent',heddviewMain,...
    'units','pixels',...
    'Position',[500 345 80 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1,...
    'String','Plot',...
    'HorizontalAlignment','center',...
    'callback',@main_plot_Callback,...
    'Tag','main_push_plot');

hpop(1) = uicontrol('Style','PopupMenu',...
    'Parent',heddviewMain,...
    'units','pixels',...
    'Position',[80 345 400 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1,...
    'String',{'1'},...
    'Value',1,...
    'HorizontalAlignment','left',...
    'callback',@visopt_Callback,...
    'Tag','visopt_pop_scno');

hLabelMain(1) = text('Parent',hAxes,...
    'units','pixels',...
    'Position',[20 365],...
    'fontsize',config.fs.text2,...
    'backgroundcolor',config.color.mainbg,...
    'String','Scan :',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'Tag','main_txt_scno');


% ---------------------------
% --- Exp. Info Panel ---
% ---------------------------
uisize.expinfo_panel = [275 200];  % [275 265]
hGroupPanel_Exp = uipanel('Parent',heddviewMain,...
    'units','pixels',...
    'Position',[20 140 uisize.expinfo_panel],...    %'Position',[20 75 uisize.expinfo_panel]
    'backgroundcolor',[0.8 1 0.8],...
    'fontsize',config.fs.text2,...
    'Title','Exp./Det. Info.',...
    'TitlePosition','lefttop',...
    'Tag','expinfo_panel');

hAxesExpInfo = axes(...
    'Parent',hGroupPanel_Exp,...
    'Units','pixels',...
    'Position',[0 0 uisize.expinfo_panel],...
    'Visible','off',...
    'Tag','expinfo_Axes');

hLabelExpInfo(1) = text('Parent',hAxesExpInfo,...
    'units','pixels',...
    'Position',celpos(1,4,config.size.edbox3,5)+[10 20],...
    'fontsize',config.fs.text2,...
    'BackgroundColor',config.color.textbg,...
    'String',{'Energy(keV) = ', '       p0 + p1*(ch) + p2*(ch)^2'},...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'Tag','expinfo_label_description');

% heditExpInfo(1) = uicontrol('Style','edit',...
%     'Parent',hGroupPanel_Exp,...
%     'units','pixels',...
%     'Position',[celpos(2,4,config.size.edbox2,5)+[10 10] config.size.edbox2-[0 5]],...
%     'backgroundcolor',[1 1 1],...
%     'fontsize',config.fs.edbox,...
%     'String',num2str([0],'%.10g'),...
%     'HorizontalAlignment','center',...
%     'TooltipString','tweak',...
%     'Tag','expinfo_edit_tweak');


data = num2cell(config.visopt.Inst.detpar);
ncol = size(config.visopt.Inst.detpar,2)-1;
colname = cell(1,ncol);
colformat = cell(1,ncol+1);
colformat(:) = {'long'};
colname{1} = 'TOA';
j = 0;
for i = 1:ncol
    colname{i+1} = sprintf('p%d',j);
    j = j+1;
end

htabledetpar = uitable('Parent',hGroupPanel_Exp,...
    'Units','pixels',...
    'Position',[5 5 265 90],...
    'ColumnName',colname,...
    'ColumnEditable',logical(zeros(1,ncol+1)+1),...
    'ColumnWidth',{100,100,100,100},...
    'ColumnFormat',colformat,...
    'Data',data,...
    'Fontsize',11,...
    'CellEditCallback',@expinfo_det_Callback,...
    'Tag','expinfo_table_detpar');

    %'CellSelectionCallback',@expinfo_det_Callback,...

%%%% future function to show peak position
hchkboxExpInfo(1) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Exp,...
    'units','pixels',...
    'Position',[celpos(1,5,config.size.edbox2,5)+[10 10] config.size.edbox3],...
    'backgroundcolor',config.color.textbg,...
    'fontsize',10,...
    'String','show',...
    'HorizontalAlignment','center',...
    'CallBack',@expinfo_marker_Callback,...
    'Enable','off',...
    'Tag','expinfo_chkbox_marker');

hpopExpInfo(1) = uicontrol('Style','PopupMenu',...
    'Parent',hGroupPanel_Exp,...
    'units','pixels',...
    'Position',[celpos(2,5,config.size.edbox3,6)+[10 10] config.size.edbox3-[0 8]],...
    'backgroundcolor',[1 1 1],...
    'fontsize',10,...
    'String',{'CeO2','Al2O3'},...
    'Value',1,...
    'HorizontalAlignment','left',...
    'CallBack',@expinfo_marker_Callback,...
    'Enable','off',...
    'Tag','expinfo_pop_marker');


% ---------------------------
% --- Visualization Option(s) Panel ---
% ---------------------------
uisize.visopt_panel = [275 300];  %[275 345];
hGroupPanel_Vis = uipanel('Parent',heddviewMain,...
    'units','pixels',...
    'Position',[305 40 uisize.visopt_panel],...
    'backgroundcolor',[0.8 1 0.8],...
    'fontsize',config.fs.text2,...
    'Title','Visualization Option(s)',...
    'TitlePosition','lefttop',...
    'Tag','visopt_panel');

hAxesVisOpt = axes(...
    'Parent',hGroupPanel_Vis,...
    'Units','pixels',...
    'Position',[0 0 uisize.visopt_panel],...
    'Visible','off',...
    'Tag','visopt_Axes');


hLabelVisOpt(1) = text('Parent',hAxesVisOpt,...
    'units','pixels',...
    'Position',celpos(1,1,config.size.edbox2,5)+[15 12+config.size.edbox2(2)/2],...
    'fontsize',config.fs.text2,...
    'String','Intensity',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'BackGroundColor',config.color.textbg,...
    'Tag','visopt_label_zrange');

hLabelVisOpt(2) = text('Parent',hAxesVisOpt,...
    'units','pixels',...
    'Position',celpos(1,2,config.size.edbox2,5)+[15 12+config.size.edbox2(2)/2],...
    'fontsize',config.fs.text2,...
    'String','step(s)',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'BackGroundColor',config.color.textbg,...
    'Tag','visopt_label_yrange');

hLabelVisOpt(3) = text('Parent',hAxesVisOpt,...
    'units','pixels',...
    'Position',celpos(1,3,config.size.edbox2,5)+[15 12+config.size.edbox2(2)/2],...
    'fontsize',config.fs.text2,...
    'String','Ch/E/d',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'BackGroundColor',config.color.textbg,...
    'Tag','visopt_label_xrange');

hLabelVisOpt(4) = text('Parent',hAxesVisOpt,...
    'units','pixels',...
    'Position',celpos(1,4,config.size.edbox2,5)+[15 12+config.size.edbox2(2)/2],...
    'fontsize',config.fs.text2,...
    'String','x-axis unit',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'BackGroundColor',config.color.textbg,...
    'Tag','visopt_label_xunit');

hLabelVisOpt(5) = text('Parent',hAxesVisOpt,...
    'units','pixels',...
    'Position',celpos(1,5,config.size.edbox2,5)+[15 12+config.size.edbox2(2)/2],...
    'fontsize',config.fs.text2,...
    'String','Motor-step',...
    'HorizontalAlignment','left',...
    'VerticalAlignment','mid',...
    'BackGroundColor',config.color.textbg,...
    'Tag','visopt_label_scno');

heditVisOpt(1) = uicontrol('Style','Edit',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(2,1,config.size.edbox4,5)+[0 10] config.size.edbox4],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String','',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_edit_zrange1');

heditVisOpt(2) = uicontrol('Style','Edit',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(3,1,config.size.edbox4,5)+[0 10] config.size.edbox4],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String','',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_edit_zrange2');

heditVisOpt(3) = uicontrol('Style','Edit',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(2,3,config.size.edbox4,5)+[0 10] config.size.edbox4],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String','0',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_edit_xrange1');

heditVisOpt(4) = uicontrol('Style','Edit',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(3,3,config.size.edbox4,5)+[0 10] config.size.edbox4],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String','8192',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_edit_xrange2');

heditVisOpt(5) = uicontrol('Style','Edit',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(2,2,config.size.edbox4,5)+[0 10] config.size.edbox4],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String','',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_edit_yrange1');

heditVisOpt(6) = uicontrol('Style','Edit',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(3,2,config.size.edbox4,5)+[0 10] config.size.edbox4],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String','',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_edit_yrange2');

heditVisOpt(7) = uicontrol('Style','PopupMenu',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(2,4,config.size.edbox2,5)+[-10 10] config.size.edbox2+[20 0]],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String',{'   channel','   Energy',['   d-spacing(' char(197) ')']},...
    'Value',1,...
    'HorizontalAlignment','left',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_pop_xunit');

heditVisOpt(8) = uicontrol('Style','Edit',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(2,5,config.size.edbox4,5)+[30 10] config.size.edbox2],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String','1',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_edit_xpos');

% heditVisOpt(7) = uicontrol('Style','PopupMenu',...
%     'Parent',hGroupPanel_Vis,...
%     'units','pixels',...
%     'Position',[celpos(2,5,config.size.edbox4,5)+[-20 10] config.size.edbox4],...
%     'backgroundcolor',[1 1 1],...
%     'fontsize',config.fs.edbox,...
%     'String',{'1'},...
%     'HorizontalAlignment','center',...
%     'CallBack',@visopt_Callback,...
%     'Tag','visopt_pop_scno');

heditVisOpt(9) = uicontrol('Style','pushbutton',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(4,5,config.size.edbox4,5)+[-20 25] 15 15],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox-4,...
    'String',{'+'},...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_push_forward');

heditVisOpt(10) = uicontrol('Style','pushbutton',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(4,5,config.size.edbox4,5)+[-20 10] 15 15],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox-4,...
    'String',{'--'},...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_push_backward');

heditVisOpt(11) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(3,6,config.size.edbox4,5)+[-20 9] 105 15],...
    'backgroundcolor',config.color.textbg,...
    'fontsize',config.fs.edbox-4,...
    'String',{'Normalize Int.'},...
    'TooltipString','normalize intensity based on exposuire time',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_normalize');

heditVisOpt(12) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(3,6,config.size.edbox4,5)+[-20 23] 105 15],...
    'backgroundcolor',config.color.textbg,...
    'fontsize',config.fs.edbox-4,...
    'String',{'Avg. steps'},...
    'TooltipString','average intensity over steps',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_avg1D');

heditVisOpt(13) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(2,6,config.size.edbox4,5)+[-20 9] 85 15],...
    'backgroundcolor',config.color.textbg,...
    'fontsize',config.fs.edbox-4,...
    'String',{'log/linear'},...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_yscale');

heditVisOpt(14) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(1,6,config.size.edbox4,5)+[5 23] 155 15],...
    'backgroundcolor',config.color.textbg,...
    'fontsize',config.fs.edbox-4,...
    'String',{'show motor position'},...
    'TooltipString','show detail motor position',...
    'HorizontalAlignment','left',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_showmotor');

heditVisOpt(15) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[celpos(1,6,config.size.edbox4,5)+[5 9] 55 15],...
    'backgroundcolor',config.color.textbg,...
    'fontsize',config.fs.edbox-4,...
    'String',{'step'},...
    'TooltipString','show Intensity sum plot',...
    'HorizontalAlignment','left',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_stepplot');

% ---------------------------
% --- Visualization Option//Dector selection// Panel ---
% ---------------------------

hGroupPanel_Det(1) = uipanel('Parent', hGroupPanel_Vis,...
    'units','pixels',...
    'Position',[5 152+65 260 70],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text2,...
    'Title','Det.',...
    'TitlePosition','lefttop',...
    'Tag','visopt_detsel_panel');

heditDetSel(1) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Det(1),...
    'units','pixels',...
    'Position',[10 30 30 20],...
    'backgroundcolor',[1 1 1],...
    'fontsize',8,...
    'String','1',...
    'Value',1,...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_det1');

heditDetSel(2) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Det(1),...
    'units','pixels',...
    'Position',[40 30 30 20],...
    'backgroundcolor',[1 1 1],...
    'fontsize',8,...
    'String','2',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_det2');

heditDetSel(3) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Det(1),...
    'units','pixels',...
    'Position',[70 30 30 20],...
    'backgroundcolor',[1 1 1],...
    'fontsize',8,...
    'String','3',...
    'HorizontalAlignment','center',...
    'Enable','off',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_det3');

heditDetSel(4) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Det(1),...
    'units','pixels',...
    'Position',[100 30 30 20],...
    'backgroundcolor',[1 1 1],...
    'fontsize',8,...
    'String','4',...
    'HorizontalAlignment','center',...
    'Enable','off',...    
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_det4');

heditDetSel(5) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Det(1),...
    'units','pixels',...
    'Position',[130 30 30 20],...
    'backgroundcolor',[1 1 1],...
    'fontsize',8,...
    'String','5',...
    'HorizontalAlignment','center',...
    'Enable','off',...    
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_det5');

heditDetSel(6) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Det(1),...
    'units','pixels',...
    'Position',[10 5 30 20],...
    'backgroundcolor',[1 1 1],...
    'fontsize',8,...
    'String','6',...
    'HorizontalAlignment','center',...
    'Enable','off',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_det6');

heditDetSel(7) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Det(1),...
    'units','pixels',...
    'Position',[40 5 30 20],...
    'backgroundcolor',[1 1 1],...
    'fontsize',8,...
    'String','7',...
    'HorizontalAlignment','center',...
    'Enable','off',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_det7');

heditDetSel(8) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Det(1),...
    'units','pixels',...
    'Position',[70 5 30 20],...
    'backgroundcolor',[1 1 1],...
    'fontsize',8,...
    'String','8',...
    'HorizontalAlignment','center',...
    'Enable','off',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_det8');

heditDetSel(9) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Det(1),...
    'units','pixels',...
    'Position',[100 5 30 20],...
    'backgroundcolor',[1 1 1],...
    'fontsize',8,...
    'String','9',...
    'HorizontalAlignment','center',...
    'Enable','off',...    
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_det9');

heditDetSel(10) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Det(1),...
    'units','pixels',...
    'Position',[130 5 35 20],...
    'backgroundcolor',[1 1 1],...
    'fontsize',8,...
    'String','10',...
    'HorizontalAlignment','center',...
    'Enable','off',...    
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_det10');

heditDetSel(11) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Det(1),...
    'units','pixels',...
    'Position',[200 30 40 20],...
    'backgroundcolor',[1 1 1],...
    'fontsize',8,...
    'String','2D',...
    'Value',1,...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_2D');

heditDetSel(12) = uicontrol('Style','CheckBox',...
    'Parent',hGroupPanel_Det(1),...
    'units','pixels',...
    'Position',[200 5 40 20],...
    'backgroundcolor',[1 1 1],...
    'fontsize',8,...
    'String','1D',...
    'HorizontalAlignment','center',...
    'CallBack',@visopt_Callback,...
    'Tag','visopt_chkbox_1D');

% ---------------------------
% --- File/Folder. Info Panel ---
% ---------------------------
uisize.fileinfo_panel = [560 100];
hGroupPanel_Exe = uipanel('Parent',heddviewMain,...
    'units','pixels',...
    'Position',[20 390 uisize.fileinfo_panel],...
    'backgroundcolor',[0.8 1 0.8],...
    'fontsize',config.fs.text2,...
    'Title','Directory/File Info.',...
    'TitlePosition','lefttop',...
    'Tag','fileinfo_panel');

hAxesExeInfo = axes(...
    'Parent',hGroupPanel_Exe,...
    'Units','pixels',...
    'Position',[0 0 uisize.fileinfo_panel],...
    'Visible','off',...
    'Tag','exeinfo_Axes');

heditExeInfo(1) = uicontrol('Style','edit',...
    'Parent',hGroupPanel_Exe,...
    'units','pixels',...
    'Position',[celpos(1,1,config.size.edbox2,5)+[95 10] 365 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String',config.file,...
    'HorizontalAlignment','left',...
    'CallBack',@exeinfo_edit_file_Callback,...
    'Tag','exeinfo_edit_file');

heditExeInfo(2) = uicontrol('Style','edit',...
    'Parent',hGroupPanel_Exe,...
    'units','pixels',...
    'Position',[celpos(1,2,config.size.edbox2,5)+[95 10] 450 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.edbox,...
    'String',config.folder,...
    'HorizontalAlignment','left',...
    'CallBack',@exeinfo_edit_folder_Callback,...
    'Tag','exeinfo_edit_folder');

hpushExeInfo(1) = uicontrol('Style','pushbutton',...
    'Parent',hGroupPanel_Exe,...
    'units','pixels',...
    'Position',[10 10 80 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1-2,...
    'String','Scan File',...
    'HorizontalAlignment','center',...
    'callback',@exeinfo_push_file_Callback,...
    'Tag','exeinfo_file_path');

hpushExeInfo(2) = uicontrol('Style','pushbutton',...
    'Parent',hGroupPanel_Exe,...
    'units','pixels',...
    'Position',[465 10 80 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1-2,...
    'String','Read Scan(s)',...
    'Enable','off',...
    'BackgroundColor',[1 0 0],...
    'HorizontalAlignment','center',...
    'callback',@exeinfo_push_readscan_Callback,...
    'Tag','exeinfo_push_start');

hpushExeInfo(3) = uicontrol('Style','pushbutton',...
    'Parent',hGroupPanel_Exe,...
    'units','pixels',...
    'Position',[10 45 80 30],...
    'backgroundcolor',[1 1 1],...
    'fontsize',config.fs.text1-2,...
    'String','Proj. Folder',...
    'HorizontalAlignment','center',...
    'callback',@exeinfo_push_folder_Callback,...
    'Tag','exeinfo_push_folder');


s_allhandle = guihandles(heddviewMain);
s_allhandle.config = config;
update_handle(s_allhandle);
% end % end of initial

%================================================================
% --- Function Callbacks
%================================================================

% --------------------------------
% --- Directory/File info Panel Callbacks
% --------------------------------
  function exeinfo_push_folder_Callback(~,~)
      h = get_handle;
      curpath = h.config.folder;
      if curpath==0
          path = uigetdir(pwd,'Select project folder');
      else
          path = uigetdir(curpath,'Select project folder');
      end
      %path = uigetdir(pwd);
      fprintf('\nSet Project folder:\n%s\n',path);
      set(h.exeinfo_edit_folder,'string',path)
      h.config.folder = path;
      update_handle(h);
      
  function exeinfo_push_file_Callback(~,~)
      h = get_handle;
%       [fname,path] = uigetfile({'*.mac','Fit2D Macro Files';...
%                          '*.*','All Files' },...
%                          'Select Macro',...
%                          'newfile.mac');
      if h.config.folder == 0
          fullpath = uigetdir(pwd);
      else
          fullpath = uigetdir(h.config.folder);
      end
      [~, name, ~] = fileparts(fullpath);
      fprintf('\nSelect Scans: %s\n',name);
      set(h.exeinfo_edit_file,'string',name);
      
      fullname = fullfile(fullpath,sprintf('%s.xy',name));
      if exist(fullname,'file') == 2
          fprintf('\nSelect Scan: %s\n',name);
          h.config.file = name;
          h.exeinfo_push_start.Enable='on';
          h.exeinfo_push_start.BackgroundColor=[0 1 0];
          update_handle(h);
      else
          fprintf('\n"%s" is not a valid scan folder\n',name);
          h.exeinfo_push_start.Enable='off';
          h.exeinfo_push_start.BackgroundColor=[1 0 0];
      end
      
  function exeinfo_push_readscan_Callback(~,~)
      h = get_handle;
      path = h.exeinfo_edit_folder.String;
      file = h.exeinfo_edit_file.String;
      fname = fullfile(path,file);
      da = readedd5_6bm(fname);   % read-in data
      h.data = da;                % save data in handle
      
      num_scan = length(da);
      num_det  = 0;
      for i = 1:num_scan
          num_det = max(num_det,length(da(i).data));
      end
      switch num_det
          case 1
              h.visopt_chkbox_det2.Value = 0;
              h.visopt_chkbox_det2.Enable = 'off';
          case 2
              h.visopt_chkbox_det1.Enable = 'on';
              h.visopt_chkbox_det2.Enable = 'on';
              h.visopt_chkbox_det3.Enable = 'off';
              h.visopt_chkbox_det4.Enable = 'off';              
              h.visopt_chkbox_det5.Enable = 'off';
              h.visopt_chkbox_det6.Enable = 'off';              
              h.visopt_chkbox_det7.Enable = 'off';
              h.visopt_chkbox_det8.Enable = 'off';              
              h.visopt_chkbox_det9.Enable = 'off';
              h.visopt_chkbox_det10.Enable = 'off';
              h.visopt_chkbox_det3.Value = 0;
              h.visopt_chkbox_det4.Value = 0;
              h.visopt_chkbox_det5.Value = 0;
              h.visopt_chkbox_det6.Value = 0;
              h.visopt_chkbox_det7.Value = 0;
              h.visopt_chkbox_det8.Value = 0;
              h.visopt_chkbox_det9.Value = 0;
              h.visopt_chkbox_det10.Value = 0;
          case 10
              h.visopt_chkbox_det1.Enable = 'on';
              h.visopt_chkbox_det2.Enable = 'on';
              h.visopt_chkbox_det3.Enable = 'on';
              h.visopt_chkbox_det4.Enable = 'on';              
              h.visopt_chkbox_det5.Enable = 'on';
              h.visopt_chkbox_det6.Enable = 'on';              
              h.visopt_chkbox_det7.Enable = 'on';
              h.visopt_chkbox_det8.Enable = 'on';              
              h.visopt_chkbox_det9.Enable = 'on';
              h.visopt_chkbox_det10.Enable = 'on';              
          otherwise
              fprintf('Something must be wrong!! There are %d detectors in the file\n',num_det);
              return;
      end
      % update number of channels if the current value is larger than data size
      if str2double(h.visopt_edit_xrange2.String) > size(da(1).data{1},2)
        h.visopt_edit_xrange2.String = num2str(size(da(1).data{1},2));
        h.config.visopt.datalim{1}(2) = size(da(1).data{1},2);
      end

      if h.visopt_pop_scno.Value > length(da)
          h.visopt_pop_scno.Value = length(da);
      end
      for i = 1:length(da)
          scno_txt{i} = sprintf('%d. %s',i,da(i).command);
      end
      h.visopt_pop_scno.String = scno_txt;
      %h.visopt_pop_scno.String = num2cell(1:length(da));
      
      
      update_handle(h);

  function exeinfo_edit_folder_Callback(hObject,~)
      h = get_handle;
      proj_folder = get(hObject,'string');
      if isdir(proj_folder) 
          fprintf('\nSet Project folder:\n%s\n',proj_folder);
          h.config.folder = proj_folder;
          update_handle(h);
      else
          fprintf('Folder "%s" does not exist !!\n',proj_folder);
      end
      
  function exeinfo_edit_file_Callback(hObject,~)
      h = get_handle;
      path_to_folder = h.config.folder;
      %get(hObject,'tag')
      scan_folder = get(hObject,'string');
      fullfolder = fullfile(path_to_folder,scan_folder);
      if ~isdir(fullfolder)
          fprintf('Folder "%s" does not exist !!\n',scan_folder);
          h.exeinfo_push_start.Enable='off';
          h.exeinfo_push_start.BackgroundColor=[1 0 0];
          return
      end
      fullname = fullfile(h.config.folder,scan_folder,sprintf('%s.xy',scan_folder));
      if exist(fullname,'file') == 2
          fprintf('\nSelect Scan: %s\n',scan_folder);
          h.config.file = scan_folder;
          h.exeinfo_push_start.Enable='on';
          h.exeinfo_push_start.BackgroundColor=[0 1 0];
          update_handle(h);
      else
          fprintf('\n"%s" is not a valid scan folder\n',scan_folder);
          h.exeinfo_push_start.Enable='off';
          h.exeinfo_push_start.BackgroundColor=[1 0 0];
      end
      
      
% --------------------------------
% --- Exp.info Panel Callbacks
% --------------------------------
  function expinfo_det_Callback(hObject,eventdata,~)
      h = get_handle;
      tag = get(hObject,'Tag');
      switch tag
          case 'expinfo_table_detpar'
              %get(hObject)
              row = eventdata.Indices(1);
              col = eventdata.Indices(2);
              fprintf('select row: %d, col: %d\n',row,col)
              new_value = hObject.Data{row,col};
              if col == 1
                  if new_value < 0
                      hObject.Data{row,col} = abs(new_value);
                  elseif abs(new_value) > 10
                      fprintf('TOA is rarely over 10 degree, please check it again!!\n')
                  end
              end
              new_par = cell2mat(hObject.Data);
              h.config.visopt.Inst.detpar = new_par;
              fprintf('Modify detector parameters:\n');
              fprintf('    TOA         p0         p1         p2\n');
              fprintf('%2.8f %2.8f %2.8f %2.8E\n',new_par');
          otherwise
              fprintf('No yet set!!\n');
      end
      update_handle(h);
      
  function expinfo_marker_Callback(hObject,eventdata)
      h = get_handle;
      tag = get(hObject,'Tag');
      switch tag
          case 'expinfo_chkbox_marker'
              if eventdata.Source.Value == 1
                  fprintf('show marker !\n');
              else
                  fprintf('hide marker !\n');
              end
          case 'expinfo_pop_marker'
              fprintf('select %s !!\n',hObject.String{hObject.Value});
          otherwise
              fprintf('No yet set!!\n');
      end
      update_handle(h)
              
% --------------------------------
% --- Visualization Options Callbacks
% --------------------------------
  function visopt_Callback(hObject,~)
      h = get_handle;
      % update options for data visualization
      
      tag = get(hObject,'Tag');
      value = str2double(get(hObject,'String'));
      
      switch tag
          case 'visopt_edit_xrange1'            
              if value<0
                  set(hObject,'String',min([abs(value) str2double(h.visopt_edit_xrange2.String)]))
              end
              xrange(1) = str2double(h.visopt_edit_xrange1.String);
              xrange(2) = str2double(h.visopt_edit_xrange2.String);
              if isnan(xrange(1))
                  h.visopt_edit_xrange1.String='0';
                  xrange(1) = 0;
              end  
              h.config.visopt.datalim{1} = xrange;
              
          case 'visopt_edit_xrange2'
              if value<str2double(h.visopt_edit_xrange1.String)
                  set(hObject,'String',h.visopt_edit_xrange1.String)
              end              
              xunit = h.visopt_pop_xunit.Value;
              xrange(1) = str2double(h.visopt_edit_xrange1.String);
              xrange(2) = str2double(h.visopt_edit_xrange2.String);              
              if isnan(xrange(2))
                  switch xunit
                      case 1
                          h.visopt_edit_xrange2.String='8192';
                          xrange(2) = 8192;
                      case 2
                          h.visopt_edit_xrange2.String='250';
                          xrange(2) = 250;
                      case 3
                          h.visopt_edit_xrange2.String='5';
                          xrange(2) = 5;                          
                  end                  
              end
              h.config.visopt.datalim{1} = xrange;
              
          case {'visopt_edit_yrange1','visopt_edit_yrange2',...
                'visopt_edit_zrange1','visopt_edit_zrange2'}
              yrange(1) = str2double(h.visopt_edit_yrange1.String);
              yrange(2) = str2double(h.visopt_edit_yrange2.String);
              zrange(1) = str2double(h.visopt_edit_zrange1.String);
              zrange(2) = str2double(h.visopt_edit_zrange2.String);
              if isnan(yrange(1))
                  h.visopt_edit_yrange1.String='';
                  yrange = 'auto';
              end
              if isnan(yrange(2))
                  h.visopt_edit_yrange2.String='';
                  yrange = 'auto';
              end
              if isnan(zrange(1))
                  h.visopt_edit_zrange1.String='';
                  zrange = 'auto';
              end
              if isnan(zrange(2))
                  h.visopt_edit_zrange2.String='';
                  zrange = 'auto';
              end              
              h.config.visopt.datalim{2} = yrange;
              h.config.visopt.datalim{3} = zrange;
              
          case 'visopt_pop_xunit'
              %assignin('base','h',h);
              xunit = h.visopt_pop_xunit.Value;
              org_unit = h.config.visopt.x_unit;
              org_limit = h.config.visopt.datalim{1};
              detinfo = h.config.visopt.Inst.detpar;
              TOA = detinfo(1,1);
              % energy calibration parameters
              % note that data is stored as [p0 p1 p2 ... pN]
              % need to flip to use polyval
              par = flip(detinfo(1,2:end)); 
              switch xunit
                  case 1
                      %fprintf('unit is Channel Number\n'); 
                      switch org_unit
                          case 'E'
                              ulim = round(roots(par-[0 0 org_limit(2)]))
                              dlim = round(roots(par-[0 0 org_limit(1)]));
                              new_max = min([ulim(end) 8192]);
                              new_min = max([dlim(end) 0]);
                              h.visopt_edit_xrange1.String = num2str(new_min,'%.10g');
                              h.visopt_edit_xrange2.String = num2str(new_max,'%.10g');
                              h.config.visopt.datalim{1} = [new_min new_max];
                          case 'd'
                              Emin = 12.398419057638671/(2*org_limit(2)*sind(TOA/2));
                              Emax = min([12.398419057638671/(2*org_limit(1)*sind(TOA/2)) 250]);
                              ulim = round(roots(par-[0 0 Emax]));
                              dlim = round(roots(par-[0 0 Emin]));
                              new_max = min([ulim(end) 8192]);
                              new_min = max([dlim(end) 0]);
                              h.visopt_edit_xrange1.String = num2str(new_min,'%.10g');
                              h.visopt_edit_xrange2.String = num2str(new_max,'%.10g');
                              h.config.visopt.datalim{1} = [new_min new_max];
                      end
                      h.config.visopt.x_unit = 'ch';
                  case 2
                      %fprintf('unit is Energy\n');
                      switch org_unit
                          case 'ch'
                              new_max = round(polyval(par,org_limit(2)));
                              new_min = round(polyval(par,org_limit(1)));
                              h.visopt_edit_xrange1.String = num2str(new_min,'%.10g');
                              h.visopt_edit_xrange2.String = num2str(new_max,'%.10g');
                              h.config.visopt.datalim{1} = [new_min new_max];
                          case 'd'
                              new_min = round(12.398419057638671/(2*org_limit(2)*sind(TOA/2)));
                              new_max = min([round(12.398419057638671/(2*org_limit(1)*sind(TOA/2))) 250]);
                              h.visopt_edit_xrange1.String = num2str(new_min,'%.10g');
                              h.visopt_edit_xrange2.String = num2str(new_max,'%.10g');
                              h.config.visopt.datalim{1} = [new_min new_max];
                      end                      
                      h.config.visopt.x_unit = 'E';
                  case 3
                      %fprintf('unit is d-spacing\n');
                      switch org_unit
                          case 'ch'
                              E_max = polyval(par,org_limit(2));
                              E_min = max([polyval(par,org_limit(1)) 0]);
                              new_max = min([12.398419057638671/E_min/2/sind(TOA/2) 5]);
                              new_min = max([12.398419057638671/E_max/2/sind(TOA/2) 0]);
                              h.visopt_edit_xrange1.String = num2str(new_min,'%.10g');
                              h.visopt_edit_xrange2.String = num2str(new_max,'%.10g');
                              h.config.visopt.datalim{1} = [new_min new_max];
                          case 'E'
                              new_max = min([abs(12.398419057638671/org_limit(1)/2/sind(TOA/2)) 5]);
                              new_min = max([12.398419057638671/org_limit(2)/2/sind(TOA/2) 0]);                        
                              h.visopt_edit_xrange1.String = num2str(new_min,'%.10g');
                              h.visopt_edit_xrange2.String = num2str(new_max,'%.10g');
                              h.config.visopt.datalim{1} = [new_min new_max];
                      end                        
                      h.config.visopt.x_unit = 'd';
              end
              
          case 'visopt_edit_xpos'
              if isempty(h.data)
                  errordlg('Please read files first!!','Error');
                  return;
              end
              posno = round(abs(str2num(get(hObject,'String'))));
              scno = h.visopt_pop_scno.Value;
              if isempty(posno)
                  posno = 1;
                  set(hObject,'String',num2str(posno));
                  errordlg('Input must be a number','Error','modal');
              elseif max(posno>size(h.data(scno).data{1},1))
                  posno = 1;
                  set(hObject,'String',num2str(posno));
                  errordlg(sprintf('Step number must between 1 - %d',size(h.data(scno).data{1},1)),'Error','modal');
              else
                  set(hObject,'String',num2str(posno));
              end
              h.config.visopt.posno = posno;

          case 'visopt_push_forward'
              if isfield(h,'data')
                  %size(h.data(h.visopt_pop_scno.Value).data{1},1)
                  posno = str2num(h.visopt_edit_xpos.String);
                  if max(posno) < size(h.data(h.visopt_pop_scno.Value).data{1},1)
                      h.visopt_edit_xpos.String = num2str(posno+1);
                      h.config.visopt.posno = posno+1;
                  end
              end
              
          case 'visopt_push_backward'
              if isfield(h,'data')
                  %size(h.data(h.visopt_pop_scno.Value).data{1},1);
                  posno = str2num(h.visopt_edit_xpos.String);
                  if min(posno) > 1
                      h.visopt_edit_xpos.String = num2str(posno-1);
                      h.config.visopt.posno = posno-1;
                  end
              end

          case 'visopt_pop_scno'
              if ~isfield(h,'data')
                  errordlg('Please read files first!!','Error');
                  return;
              elseif isempty(h.data)
                  errordlg('Please read files first!!','Error');
                  return;
              end              
              scno = get(hObject,'Value');
              posno = str2num(h.visopt_edit_xpos.String);
              if max(posno>size(h.data(scno).data{1},1))
                  h.visopt_edit_xpos.String = '1';
                  h.config.visopt.posno = 1;
              end
              % check if current scan has data
              if isempty(h.data(scno).data{1})
                  h.visopt_chkbox_det1.Value = 0;
                  h.visopt_chkbox_det1.Enable = 'off';
              else
                  h.visopt_chkbox_det1.Enable = 'on';
              end
              if isempty(h.data(scno).data{2})
                  h.visopt_chkbox_det2.Value = 0;
                  h.visopt_chkbox_det2.Enable = 'off';
              else
                  h.visopt_chkbox_det2.Enable = 'on';
              end              
              
              h.config.visopt.scno = scno;
              
          case {'visopt_chkbox_det1','visopt_chkbox_det2','visopt_chkbox_det3','visopt_chkbox_det4','visopt_chkbox_det5',...
                'visopt_chkbox_det6','visopt_chkbox_det7','visopt_chkbox_det8','visopt_chkbox_det9','visopt_chkbox_det10'}
              if get(hObject,'Value')
                  fprintf('Select Det-%s...\n',hObject.String);
              else
                  fprintf('Deselect Det-%s...\n',hObject.String);
              end
              
          case 'visopt_chkbox_1D'
              if get(hObject,'Value')
                  fprintf('Plot type: 1D line plot\n');
              end
              
          case 'visopt_chkbox_2D'
              if get(hObject,'Value')
                  fprintf('Plot type: 2D Map\n');
              end
              
          case 'visopt_chkbox_avg1D'
              h.config.visopt.avg_1D = get(hObject,'Value');

          case 'visopt_chkbox_normalize'
              h.config.visopt.normalize = get(hObject,'Value');
          
          case 'visopt_chkbox_yscale'
              switch get(hObject,'Value')
                  case 0
                      fprintf('switch yscale to ''log''\n')
                  case 1
                      fprintf('switch yscale to ''linear''\n')                      
              end
              
          case 'visopt_chkbox_showmotor'
              switch get(hObject,'Value')
                  case 1
                      if ~isfield(h,'data')
                          fprintf('read the data first!!\n');
                      else
                          scno = h.visopt_pop_scno.Value;
                          edd_show_scan_details(h.data(scno));
                      end
              end
          case 'visopt_chkbox_stepplot'
              switch get(hObject,'Value')
                  case 0
                      h.visopt_edit_xpos.Enable = 'on' ;
                  case 1
                      h.visopt_edit_xpos.Enable = 'off';
              end
          otherwise
              fprintf('Not set yet!!\n');
      end
      update_handle(h);

     
% --------------------------------
% --- Main Pushbutton Callbacks
% --------------------------------
  function main_load_Callback(~,~)
      [fname,path] = uigetfile({'*.mat','EDD detector configuration';...
                         '*.*','All Files' },...
                         'Load Config',...
                         'edd_detinfo.mat');
      h = get_handle;
      %assignin('base','h',h);
      if fname ~=0
          input = [path fname];    
          load(input);
          h = get_handle;
          % assign detector parameters to config
          h.config.visopt.Inst = Inst;
          format longG
          % update detpar
          h.expinfo_table_detpar.Data = num2cell(Inst(1).detpar);
          update_handle(h);
      end
      
  function main_save_Callback(~,~)
      h = get_handle;
      [fname,path] = uiputfile({'*.mat','EDD detector configuration';...
                         '*.*','All Files' },...
                         'Save Config',...
                         'edd_detinfo_tmp.mat');
      if fname ~= 0
          output = [path fname];
          Inst = h.config.visopt.Inst;
          save(output,'Inst','-v7.3');
      end

function main_calibrate_Callback(~,~)
      h = get_handle;
      edd_calibrant(h);
      
  function main_plot_Callback(~,~)
      h = get_handle;
      if ~isfield(h,'func_error_ct')
          h.func_error_ct.plot = 0;
          update_handle(h);
      end
      
      if ~isfield(h,'data')
          ruletxt = {'Dude... read the data first!!',...
                     'Dude... read the data first!!',...
                     'Are you fucking with me?',...
                     'Don''t fuck with me, asshole!!'};
          errordlg({ruletxt{h.func_error_ct.plot+1}},'Plot Error','modal');
          h.func_error_ct.plot = h.func_error_ct.plot +1;
          update_handle(h);
          if h.func_error_ct.plot==4
              delete(findall(0,'Tag','eddviewmain_Fig'));
          end
          return;
      end
      
%%% make sure config is read!! %%%
      detlist  = [h.visopt_chkbox_det1.Value h.visopt_chkbox_det2.Value h.visopt_chkbox_det3.Value h.visopt_chkbox_det4.Value h.visopt_chkbox_det5.Value ...
                  h.visopt_chkbox_det6.Value h.visopt_chkbox_det7.Value h.visopt_chkbox_det8.Value h.visopt_chkbox_det9.Value h.visopt_chkbox_det10.Value];
      typelist = [h.visopt_chkbox_2D.Value h.visopt_chkbox_1D.Value];
      h.config.visopt.scno = h.visopt_pop_scno.Value;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
      da  = h.data;
%%% make sure Inst is updated!! %%%
      h.config.visopt.Inst.detpar = cell2mat(h.expinfo_table_detpar.Data);
      opt = h.config.visopt;
      opt.yscale = h.visopt_chkbox_yscale.Value;
      opt.step_plot = h.visopt_chkbox_stepplot.Value;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%     
      
      fprintf('\nPloting data...\n');
      if opt.step_plot
          opt.type = 'step_plot';
          eddplot3(da,opt);
      else
          if sum(detlist)==0
              errordlg({'Select at least one detector to view!!'},'Error','modal');
          end
          for i = 1:10
              if detlist(i)
                  if typelist(1)
                      opt.type = '2draw';
                      opt.detno = i;
                      eddplot3(da,opt)
                  end
                  if typelist(2)
                      opt.type = 'raw';
                      opt.detno = i;
                      eddplot3(da,opt)
                  end
              end
          end
      end
      
      % show detail motor positions
      if h.visopt_chkbox_showmotor.Value
          edd_show_scan_details(h.data(h.visopt_pop_scno.Value))
      end
      
      update_handle(h)
      
%==========================================================================
% --- close request function of xrdguimain fig 
%==========================================================================

function eddviewmain_CloseRequestFcn(~,~)
delete(findall(0,'Tag','eddviewmain_Fig'));
delete(findall(0,'-regexp','Tag','edd_fig*'));
delete(findall(0,'-regexp','Tag','eddshowscan*'));
delete(findall(0,'-regexp','Tag','eddcali*'));

%==========================================================================
% --- Help About callback function
%==========================================================================

function eddviewmain_MenuHelpCallbackFcn(hObject,~)
    tag = get(hObject,'Tag');
    switch tag
        case 'eddviewmain_MenuHelpManual'
            str ={'';...
                'Sorry... dont''t have time for manual.';...
                'Try yourself and use at your own risk !!';...
                '';...
                'Oh.. you want to donate?';...
                'I accept paypal!!';...
                '   Andrew Chuang';...
                '   (chuang.cp@gmail.com)'};
            msg_title = 'Manual';
            hMSGBox = msgbox(str,msg_title,'modal');
            set(hMSGBox,'color',[1 1 0.85]);
            set(get(get(hMSGBox,'currentaxes'),'children'),'Fontsize',10)
            
        otherwise
            fig = figure(69); clf(fig,'reset');
            img = imread('EDD_det_configuration.png');
            set(fig,'MenuBar', 'none','Tag','edd_fig_det_config',...
                'Name','Schematic of Detector Configuration','NumberTitle','off');
            imshow(img,'Border','tight');
    end

%==========================================================================
% --- Load all handle object function
%==========================================================================

function h = get_handle
      hmain = findall(0,'Tag','eddviewmain_Fig');
      h = getappdata(hmain,'allhandle');

%==========================================================================
% --- Save all handle object function
%==========================================================================

function update_handle(handle_to_save)
      hmain = findall(0,'Tag','eddviewmain_Fig');
      setappdata(hmain,'allhandle',handle_to_save);

